/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PlanetFactory,
  PlanetFactoryInterface,
} from "../../contracts/PlanetFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_retrieveRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planetID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldMapIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_xCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetType",
        type: "uint256",
      },
    ],
    name: "createPlanet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "existingPlanets",
    outputs: [
      {
        internalType: "uint256",
        name: "planetID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldMapIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "planetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
    ],
    name: "getPlanet",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "planetID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "worldMapIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.Planet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "planetTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "radius",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "yield_source",
        type: "string",
      },
      {
        internalType: "string",
        name: "image_link",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "retrieveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610019610119565b6040518060600160405280600281526020016040518060400160405280600581526020017f796561726e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280601a81526020017f68747470733a2f2f544f444f2d6164642d495046532d6c696e6b000000000000815250815250905060008190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906100f392919061013a565b50604082015181600201908051906020019061011092919061013a565b5050505061023e565b60405180606001604052806000815260200160608152602001606081525090565b828054610146906101dd565b90600052602060002090601f01602090048101928261016857600085556101af565b82601f1061018157805160ff19168380011785556101af565b828001600101855582156101af579182015b828111156101ae578251825591602001919060010190610193565b5b5090506101bc91906101c0565b5090565b5b808211156101d95760008160009055506001016101c1565b5090565b600060028204905060018216806101f557607f821691505b602082108114156102095761020861020f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61086c8061024d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063040af1ba1461006757806309f29d1b1461008357806310ccd5301461009f57806334efcb8e146100bd578063cf4530b9146100ed578063e08c264e14610122575b600080fd5b610081600480360381019061007c9190610480565b610154565b005b61009d60048036038101906100989190610457565b6101e7565b005b6100a76101ea565b6040516100b49190610655565b60405180910390f35b6100d760048036038101906100d29190610457565b61021d565b6040516100e4919061063a565b60405180910390f35b61010760048036038101906101029190610457565b610286565b604051610119969594939291906106b5565b60405180910390f35b61013c60048036038101906101379190610457565b6102c2565b60405161014b93929190610670565b60405180910390f35b61015c61040c565b6040518060c00160405280878152602001868152602001858152602001848152602001838152602001600081525090508060016000888152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050505050505050565b50565b600044426040516020016101ff929190610603565b6040516020818303038152906040528051906020012060001c905090565b61022561040c565b600160008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b600081815481106102d257600080fd5b90600052602060002090600302016000915090508060000154908060010180546102fb9061077a565b80601f01602080910402602001604051908101604052809291908181526020018280546103279061077a565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b5050505050908060020180546103899061077a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b59061077a565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050505050905083565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000813590506104518161081f565b92915050565b60006020828403121561046957600080fd5b600061047784828501610442565b91505092915050565b600080600080600060a0868803121561049857600080fd5b60006104a688828901610442565b95505060206104b788828901610442565b94505060406104c888828901610442565b93505060606104d988828901610442565b92505060806104ea88828901610442565b9150509295509295909350565b600061050282610716565b61050c8185610721565b935061051c818560208601610747565b610525816107e5565b840191505092915050565b600061053d600983610732565b9150610548826107f6565b600982019050919050565b60c08201600082015161056960008501826105ce565b50602082015161057c60208501826105ce565b50604082015161058f60408501826105ce565b5060608201516105a260608501826105ce565b5060808201516105b560808501826105ce565b5060a08201516105c860a08501826105ce565b50505050565b6105d78161073d565b82525050565b6105e68161073d565b82525050565b6105fd6105f88261073d565b6107ac565b82525050565b600061060f82856105ec565b60208201915061061f82846105ec565b60208201915061062e82610530565b91508190509392505050565b600060c08201905061064f6000830184610553565b92915050565b600060208201905061066a60008301846105dd565b92915050565b600060608201905061068560008301866105dd565b818103602083015261069781856104f7565b905081810360408301526106ab81846104f7565b9050949350505050565b600060c0820190506106ca60008301896105dd565b6106d760208301886105dd565b6106e460408301876105dd565b6106f160608301866105dd565b6106fe60808301856105dd565b61070b60a08301846105dd565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b60005b8381101561076557808201518184015260208101905061074a565b83811115610774576000848401525b50505050565b6000600282049050600182168061079257607f821691505b602082108114156107a6576107a56107b6565b5b50919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f54656c6c6f72524e470000000000000000000000000000000000000000000000600082015250565b6108288161073d565b811461083357600080fd5b5056fea26469706673582212200216bc344f31a7dafd7bb0dbba75c05de2aaf0c77639fe800109d303ecd5147364736f6c63430008040033";

type PlanetFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlanetFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PlanetFactory__factory extends ContractFactory {
  constructor(...args: PlanetFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PlanetFactory> {
    return super.deploy(overrides || {}) as Promise<PlanetFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PlanetFactory {
    return super.attach(address) as PlanetFactory;
  }
  override connect(signer: Signer): PlanetFactory__factory {
    return super.connect(signer) as PlanetFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlanetFactoryInterface {
    return new utils.Interface(_abi) as PlanetFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PlanetFactory {
    return new Contract(address, _abi, signerOrProvider) as PlanetFactory;
  }
}
