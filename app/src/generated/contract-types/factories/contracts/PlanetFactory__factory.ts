/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PlanetFactory,
  PlanetFactoryInterface,
} from "../../contracts/PlanetFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "_retrieveRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planetID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldMapIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_xCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetType",
        type: "uint256",
      },
    ],
    name: "createPlanet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "existingPlanets",
    outputs: [
      {
        internalType: "uint256",
        name: "planetID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldMapIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yCoord",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "planetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
    ],
    name: "getPlanet",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "planetID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "worldMapIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yCoord",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "planetType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.Planet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "planetTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "radius",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "yield_source",
        type: "string",
      },
      {
        internalType: "string",
        name: "image_link",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "retrieveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cd2806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806334efcb8e1161005b57806334efcb8e146100d85780638129fc1c14610108578063cf4530b914610112578063e08c264e146101475761007d565b8063040af1ba1461008257806309f29d1b1461009e57806310ccd530146100ba575b600080fd5b61009c6004803603810190610097919061080b565b610179565b005b6100b860048036038101906100b391906107e2565b61020c565b005b6100c261020f565b6040516100cf9190610a4d565b60405180910390f35b6100f260048036038101906100ed91906107e2565b610242565b6040516100ff9190610a32565b60405180910390f35b6101106102ab565b005b61012c600480360381019061012791906107e2565b61043a565b60405161013e96959493929190610aad565b60405180910390f35b610161600480360381019061015c91906107e2565b610476565b60405161017093929190610a68565b60405180910390f35b6101816106d3565b6040518060c00160405280878152602001868152602001858152602001848152602001838152602001600081525090508060026000888152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050505050505050565b50565b600044426040516020016102249291906109c0565b6040516020818303038152906040528051906020012060001c905090565b61024a6106d3565b600260008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b60006102b760016105c0565b905080156102db576001600060016101000a81548160ff0219169083151502179055505b6102e3610709565b6040518060600160405280600281526020016040518060400160405280600581526020017f796561726e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280601a81526020017f68747470733a2f2f544f444f2d6164642d495046532d6c696e6b000000000000815250815250905060018190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906103bd92919061072a565b5060408201518160020190805190602001906103da92919061072a565b5050505080156104375760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161042e91906109f7565b60405180910390a15b50565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b6001818154811061048657600080fd5b90600052602060002090600302016000915090508060000154908060010180546104af90610b91565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90610b91565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b50505050509080600201805461053d90610b91565b80601f016020809104026020016040519081016040528092919081815260200182805461056990610b91565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905083565b60008060019054906101000a900460ff16156106375760018260ff161480156105ef57506105ed306106b0565b155b61062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590610a12565b60405180910390fd5b600090506106ab565b8160ff1660008054906101000a900460ff1660ff161061068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390610a12565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180606001604052806000815260200160608152602001606081525090565b82805461073690610b91565b90600052602060002090601f016020900481019282610758576000855561079f565b82601f1061077157805160ff191683800117855561079f565b8280016001018555821561079f579182015b8281111561079e578251825591602001919060010190610783565b5b5090506107ac91906107b0565b5090565b5b808211156107c95760008160009055506001016107b1565b5090565b6000813590506107dc81610c85565b92915050565b6000602082840312156107f457600080fd5b6000610802848285016107cd565b91505092915050565b600080600080600060a0868803121561082357600080fd5b6000610831888289016107cd565b9550506020610842888289016107cd565b9450506040610853888289016107cd565b9350506060610864888289016107cd565b9250506080610875888289016107cd565b9150509295509295909350565b61088b81610b4c565b82525050565b600061089c82610b0e565b6108a68185610b19565b93506108b6818560208601610b5e565b6108bf81610bfc565b840191505092915050565b60006108d7602e83610b19565b91506108e282610c0d565b604082019050919050565b60006108fa600983610b2a565b915061090582610c5c565b600982019050919050565b60c082016000820151610926600085018261098b565b506020820151610939602085018261098b565b50604082015161094c604085018261098b565b50606082015161095f606085018261098b565b506080820151610972608085018261098b565b5060a082015161098560a085018261098b565b50505050565b61099481610b35565b82525050565b6109a381610b35565b82525050565b6109ba6109b582610b35565b610bc3565b82525050565b60006109cc82856109a9565b6020820191506109dc82846109a9565b6020820191506109eb826108ed565b91508190509392505050565b6000602082019050610a0c6000830184610882565b92915050565b60006020820190508181036000830152610a2b816108ca565b9050919050565b600060c082019050610a476000830184610910565b92915050565b6000602082019050610a62600083018461099a565b92915050565b6000606082019050610a7d600083018661099a565b8181036020830152610a8f8185610891565b90508181036040830152610aa38184610891565b9050949350505050565b600060c082019050610ac2600083018961099a565b610acf602083018861099a565b610adc604083018761099a565b610ae9606083018661099a565b610af6608083018561099a565b610b0360a083018461099a565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b600060ff82169050919050565b6000610b5782610b3f565b9050919050565b60005b83811015610b7c578082015181840152602081019050610b61565b83811115610b8b576000848401525b50505050565b60006002820490506001821680610ba957607f821691505b60208210811415610bbd57610bbc610bcd565b5b50919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f54656c6c6f72524e470000000000000000000000000000000000000000000000600082015250565b610c8e81610b35565b8114610c9957600080fd5b5056fea26469706673582212200a9aa7369eb761ca1c5423b36a51ba247641880a2d1ea222aa10ce3215b0c69964736f6c63430008040033";

type PlanetFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlanetFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PlanetFactory__factory extends ContractFactory {
  constructor(...args: PlanetFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PlanetFactory> {
    return super.deploy(overrides || {}) as Promise<PlanetFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PlanetFactory {
    return super.attach(address) as PlanetFactory;
  }
  override connect(signer: Signer): PlanetFactory__factory {
    return super.connect(signer) as PlanetFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlanetFactoryInterface {
    return new utils.Interface(_abi) as PlanetFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PlanetFactory {
    return new Contract(address, _abi, signerOrProvider) as PlanetFactory;
  }
}
