/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Players, PlayersInterface } from "../../contracts/Players";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "determineStartingPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementPositionCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "indexStartingPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shipId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldId",
        type: "uint256",
      },
    ],
    name: "moveShip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeJoined",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stepsAvailable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStepsTaken",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    name: "setNftAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worldAddress",
        type: "address",
      },
    ],
    name: "setWorldAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "steps",
        type: "uint256",
      },
    ],
    name: "syncSteps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061103f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637ba25270116100665780637ba252701461010a578063c04d0e5014610114578063e2eb41ff14610133578063e839665c14610167578063ec4a8a381461018357610093565b80630b102d1a146100985780633b72498a146100b45780635a83d240146100d25780637912680d146100ee575b600080fd5b6100b260048036038101906100ad9190610a3d565b61018d565b005b6100bc6101d1565b6040516100c99190610c6d565b60405180910390f35b6100ec60048036038101906100e79190610a66565b6101dd565b005b61010860048036038101906101039190610a3d565b6102ab565b005b6101126102ef565b005b61011c6102fb565b60405161012a929190610ccd565b60405180910390f35b61014d60048036038101906101489190610a3d565b610365565b60405161015e959493929190610cf6565b60405180910390f35b610181600480360381019061017c9190610af4565b61039b565b005b61018b6106f2565b005b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60018060000154905081565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f90610c4d565b60405180910390fd5b8181600401600082825461027c9190610d5a565b92505081905550818160030160008282546102979190610d5a565b925050819055504281600201819055505050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102f96001610924565b565b6000806103086001610924565b6000610314600161093a565b90506000600a826103259190610eab565b905060006001600a846103389190610db0565b6103429190610d5a565b90506064831415610358576103576001610948565b5b8181945094505050509091565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f7b1393856040518263ffffffff1660e01b81526004016103f99190610c6d565b6040805180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190610ab8565b91509150600061045a8389610955565b905060006104688389610955565b90506000610496828361047b9190610de1565b84856104879190610de1565b6104919190610d5a565b610984565b9050600a816104a59190610de1565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015411610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90610c0d565b60405180910390fd5b600a816105359190610de1565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546105869190610e3b565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f488147788338d8d6040518563ffffffff1660e01b81526004016105ee9493929190610c88565b600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b50505050600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633684aa66898c6040518363ffffffff1660e01b8152600401610680929190610ccd565b6040805180830381600087803b15801561069957600080fd5b505af11580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190610ab8565b9150915081871480156106e357508086145b50505050505050505050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541461077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390610c2d565b60405180910390fd5b6107866000610924565b610790600061093a565b816000018190555042816001018190555061a8c0426107af9190610e3b565b816002018190555060008160030181905550600081600401819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b81526004016108289190610bf2565b602060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a9190610a8f565b90506000806108876102fb565b91509150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4881477843385856040518563ffffffff1660e01b81526004016108ec9493929190610c88565b600060405180830381600087803b15801561090657600080fd5b505af115801561091a573d6000803e3d6000fd5b5050505050505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000816000018190555050565b600081831161096f57828261096a9190610e3b565b61097c565b818361097b9190610e3b565b5b905092915050565b600060038211156109eb57819050600060016002846109a39190610db0565b6109ad9190610d5a565b90505b818110156109e55780915060028182856109ca9190610db0565b6109d49190610d5a565b6109de9190610db0565b90506109b0565b506109f9565b600082146109f857600190505b5b919050565b600081359050610a0d81610fdb565b92915050565b600081359050610a2281610ff2565b92915050565b600081519050610a3781610ff2565b92915050565b600060208284031215610a4f57600080fd5b6000610a5d848285016109fe565b91505092915050565b600060208284031215610a7857600080fd5b6000610a8684828501610a13565b91505092915050565b600060208284031215610aa157600080fd5b6000610aaf84828501610a28565b91505092915050565b60008060408385031215610acb57600080fd5b6000610ad985828601610a28565b9250506020610aea85828601610a28565b9150509250929050565b600080600080600060a08688031215610b0c57600080fd5b6000610b1a88828901610a13565b9550506020610b2b88828901610a13565b9450506040610b3c88828901610a13565b9350506060610b4d88828901610a13565b9250506080610b5e88828901610a13565b9150509295509295909350565b610b7481610e6f565b82525050565b6000610b87602883610d49565b9150610b9282610f3a565b604082019050919050565b6000610baa601583610d49565b9150610bb582610f89565b602082019050919050565b6000610bcd601983610d49565b9150610bd882610fb2565b602082019050919050565b610bec81610ea1565b82525050565b6000602082019050610c076000830184610b6b565b92915050565b60006020820190508181036000830152610c2681610b7a565b9050919050565b60006020820190508181036000830152610c4681610b9d565b9050919050565b60006020820190508181036000830152610c6681610bc0565b9050919050565b6000602082019050610c826000830184610be3565b92915050565b6000608082019050610c9d6000830187610be3565b610caa6020830186610b6b565b610cb76040830185610be3565b610cc46060830184610be3565b95945050505050565b6000604082019050610ce26000830185610be3565b610cef6020830184610be3565b9392505050565b600060a082019050610d0b6000830188610be3565b610d186020830187610be3565b610d256040830186610be3565b610d326060830185610be3565b610d3f6080830184610be3565b9695505050505050565b600082825260208201905092915050565b6000610d6582610ea1565b9150610d7083610ea1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da557610da4610edc565b5b828201905092915050565b6000610dbb82610ea1565b9150610dc683610ea1565b925082610dd657610dd5610f0b565b5b828204905092915050565b6000610dec82610ea1565b9150610df783610ea1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3057610e2f610edc565b5b828202905092915050565b6000610e4682610ea1565b9150610e5183610ea1565b925082821015610e6457610e63610edc565b5b828203905092915050565b6000610e7a82610e81565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610eb682610ea1565b9150610ec183610ea1565b925082610ed157610ed0610f0b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e6f7420656e6f75676820737465707320617661696c61626c6520746f206d6f60008201527f7665207468657265000000000000000000000000000000000000000000000000602082015250565b7f796f7520616c7265616479207369676e65642075700000000000000000000000600082015250565b7f796f75206e65656420746f206265207265676973746572656400000000000000600082015250565b610fe481610e6f565b8114610fef57600080fd5b50565b610ffb81610ea1565b811461100657600080fd5b5056fea2646970667358221220eecda04554d88ac538e33164108242cc2494a9c86235f0a250a8a537fc5ff21e64736f6c63430008040033";

type PlayersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlayersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Players__factory extends ContractFactory {
  constructor(...args: PlayersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Players> {
    return super.deploy(overrides || {}) as Promise<Players>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Players {
    return super.attach(address) as Players;
  }
  override connect(signer: Signer): Players__factory {
    return super.connect(signer) as Players__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlayersInterface {
    return new utils.Interface(_abi) as PlayersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Players {
    return new Contract(address, _abi, signerOrProvider) as Players;
  }
}
