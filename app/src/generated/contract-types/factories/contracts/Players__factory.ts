/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Players, PlayersInterface } from "../../contracts/Players";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountFunded",
        type: "uint256",
      },
    ],
    name: "TreasuryFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "NFTPRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "determineStartingPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundTreasury",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "indexStartingPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_planetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shipId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldId",
        type: "uint256",
      },
    ],
    name: "moveShip",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeJoined",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stepsAvailable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStepsTaken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountEarned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "registerProfile",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setBackendAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
    ],
    name: "setNftAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worldAddress",
        type: "address",
      },
    ],
    name: "setWorldAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessageBackend",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_steps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "syncSteps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessageBackend",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_message",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastQueried",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "verifySteps",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fbf8061010d6000396000f3fe6080604052600436106100f35760003560e01c80637912680d1161008a578063c04d0e5011610059578063c04d0e50146102ae578063e2eb41ff146102da578063e839665c1461031c578063f2fde38b14610338576100f3565b80637912680d146102255780638da5cb5b1461024e578063b93d28ee14610279578063b9c18685146102a4576100f3565b80633b72498a116100c65780633b72498a1461019c5780633fc90920146101c757806350312c9e146101e3578063715018a61461020e576100f3565b80630b102d1a146100f85780631815ce7d146101215780631822b8471461014a578063240bcbfa14610173575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611335565b610361565b005b34801561012d57600080fd5b5061014860048036038101906101439190611335565b6103a5565b005b34801561015657600080fd5b50610171600480360381019061016c919061135e565b6103e9565b005b34801561017f57600080fd5b5061019a6004803603810190610195919061135e565b6105ae565b005b3480156101a857600080fd5b506101b16106d5565b6040516101be919061194f565b60405180910390f35b6101e160048036038101906101dc91906113e7565b6106e1565b005b3480156101ef57600080fd5b506101f8610969565b604051610205919061194f565b60405180910390f35b34801561021a57600080fd5b50610223610976565b005b34801561023157600080fd5b5061024c60048036038101906102479190611335565b6109fe565b005b34801561025a57600080fd5b50610263610a42565b604051610270919061177f565b60405180910390f35b34801561028557600080fd5b5061028e610a6b565b60405161029b919061194f565b60405180910390f35b6102ac610a76565b005b3480156102ba57600080fd5b506102c3610aaf565b6040516102d19291906119af565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc9190611335565b610b02565b604051610313969594939291906119d8565b60405180910390f35b6103366004803603810190610331919061148d565b610b3e565b005b34801561034457600080fd5b5061035f600480360381019061035a9190611335565b610ea2565b005b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600085856040516020016103fe9291906119af565b604051602081830303815290604052805190602001209050868114610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f9061184f565b60405180910390fd5b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081896040516020016104a7929190611742565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516104e494939291906117ca565b6020604051602081039080840390855afa158015610506573d6000803e3d6000fd5b505050602060405103519050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061180f565b60405180910390fd5b50505050505050505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415610639576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106309061190f565b60405180910390fd5b8060020154851461067f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610676906118cf565b60405180910390fd5b61068d8787878787876103e9565b858160040160008282546106a19190611ac1565b92505081905550858160030160008282546106bc9190611ac1565b9250508190555042816002018190555050505050505050565b60028060000154905081565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541461076b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610762906118af565b60405180910390fd5b6107756001610f9a565b61077f6001610fb0565b816000018190555042816001018190555061a8c04261079e9190611ba2565b8160020181905550600081600301819055506000816004018190555060008160050181905550662386f26fc10000341461080d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108049061188f565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0def52133856040518363ffffffff1660e01b815260040161086c92919061179a565b602060405180830381600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190611428565b90506000806108cb610aaf565b91509150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4881477843385856040518563ffffffff1660e01b8152600401610930949392919061196a565b600060405180830381600087803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b505050505050505050565b6000804790508091505090565b61097e610fbe565b73ffffffffffffffffffffffffffffffffffffffff1661099c610a42565b73ffffffffffffffffffffffffffffffffffffffff16146109f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e9906118ef565b60405180910390fd5b6109fc6000610fc6565b565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b662386f26fc1000081565b7fef7aff843f3420b45d9d058ff62be0d87a95132dea4a67b18925283ba05647dc34604051610aa5919061194f565b60405180910390a1565b600080610abc6002610f9a565b6000610ac86002610fb0565b90506000602a82610ad99190611b48565b9050600060109050602e831415610af557610af4600261108a565b5b8181945094505050509091565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f7b1393856040518263ffffffff1660e01b8152600401610b9c919061194f565b6040805180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed9190611451565b915091506000610bfd8389611097565b90506000610c0b8389611097565b90506000610c398283610c1e9190611b48565b8485610c2a9190611b48565b610c349190611ac1565b6110c6565b9050600a81610c489190611b48565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015411610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc29061186f565b60405180910390fd5b600a81610cd89190611b48565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610d299190611ba2565b92505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f488147788338d8d6040518563ffffffff1660e01b8152600401610d91949392919061196a565b600060405180830381600087803b158015610dab57600080fd5b505af1158015610dbf573d6000803e3d6000fd5b50505050600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633684aa66898c6040518363ffffffff1660e01b8152600401610e239291906119af565b6040805180830381600087803b158015610e3c57600080fd5b505af1158015610e50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e749190611451565b91509150818c148015610e865750808b145b15610e9457610e93611140565b5b505050505050505050505050565b610eaa610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610ec8610a42565b73ffffffffffffffffffffffffffffffffffffffff1614610f1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f15906118ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f859061182f565b60405180910390fd5b610f9781610fc6565b50565b6001816000016000828254019250508190555050565b600081600001549050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000816000018190555050565b60008183116110b15782826110ac9190611ba2565b6110be565b81836110bd9190611ba2565b5b905092915050565b6000600382111561112d57819050600060016002846110e59190611b17565b6110ef9190611ac1565b90505b8181101561112757809150600281828561110c9190611b17565b6111169190611ac1565b6111209190611b17565b90506110f2565b5061113b565b6000821461113a57600190505b5b919050565b600047905060006611c37937e080009050808211156112605760003373ffffffffffffffffffffffffffffffffffffffff168260405161117f9061176a565b60006040518083038185875af1925050503d80600081146111bc576040519150601f19603f3d011682016040523d82523d6000602084013e6111c1565b606091505b5050905080611205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fc9061192f565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160008282546112579190611ac1565b92505081905550505b5050565b600061127761127284611a5e565b611a39565b90508281526020810184848401111561128f57600080fd5b61129a848285611c29565b509392505050565b6000813590506112b181611f2d565b92915050565b6000813590506112c681611f44565b92915050565b600082601f8301126112dd57600080fd5b81356112ed848260208601611264565b91505092915050565b60008135905061130581611f5b565b92915050565b60008151905061131a81611f5b565b92915050565b60008135905061132f81611f72565b92915050565b60006020828403121561134757600080fd5b6000611355848285016112a2565b91505092915050565b60008060008060008060c0878903121561137757600080fd5b600061138589828a016112b7565b965050602061139689828a016112f6565b95505060406113a789828a016112f6565b94505060606113b889828a01611320565b93505060806113c989828a016112b7565b92505060a06113da89828a016112b7565b9150509295509295509295565b6000602082840312156113f957600080fd5b600082013567ffffffffffffffff81111561141357600080fd5b61141f848285016112cc565b91505092915050565b60006020828403121561143a57600080fd5b60006114488482850161130b565b91505092915050565b6000806040838503121561146457600080fd5b60006114728582860161130b565b92505060206114838582860161130b565b9150509250929050565b600080600080600060a086880312156114a557600080fd5b60006114b3888289016112f6565b95505060206114c4888289016112f6565b94505060406114d5888289016112f6565b93505060606114e6888289016112f6565b92505060806114f7888289016112f6565b9150509295509295909350565b61150d81611bd6565b82525050565b61151c81611be8565b82525050565b61153361152e82611be8565b611c9c565b82525050565b600061154482611a8f565b61154e8185611aa5565b935061155e818560208601611c38565b80840191505092915050565b600061157582611a9a565b61157f8185611ab0565b935061158f818560208601611c38565b61159881611d33565b840191505092915050565b60006115b0600c83611ab0565b91506115bb82611d44565b602082019050919050565b60006115d3602683611ab0565b91506115de82611d6d565b604082019050919050565b60006115f6601483611ab0565b915061160182611dbc565b602082019050919050565b6000611619602883611ab0565b915061162482611de5565b604082019050919050565b600061163c601f83611ab0565b915061164782611e34565b602082019050919050565b600061165f601583611ab0565b915061166a82611e5d565b602082019050919050565b6000611682601b83611ab0565b915061168d82611e86565b602082019050919050565b60006116a5602083611ab0565b91506116b082611eaf565b602082019050919050565b60006116c8601983611ab0565b91506116d382611ed8565b602082019050919050565b60006116eb600083611aa5565b91506116f682611f01565b600082019050919050565b600061170e601883611ab0565b915061171982611f04565b602082019050919050565b61172d81611c12565b82525050565b61173c81611c1c565b82525050565b600061174e8285611539565b915061175a8284611522565b6020820191508190509392505050565b6000611775826116de565b9150819050919050565b60006020820190506117946000830184611504565b92915050565b60006040820190506117af6000830185611504565b81810360208301526117c1818461156a565b90509392505050565b60006080820190506117df6000830187611513565b6117ec6020830186611733565b6117f96040830185611513565b6118066060830184611513565b95945050505050565b60006020820190508181036000830152611828816115a3565b9050919050565b60006020820190508181036000830152611848816115c6565b9050919050565b60006020820190508181036000830152611868816115e9565b9050919050565b600060208201905081810360008301526118888161160c565b9050919050565b600060208201905081810360008301526118a88161162f565b9050919050565b600060208201905081810360008301526118c881611652565b9050919050565b600060208201905081810360008301526118e881611675565b9050919050565b6000602082019050818103600083015261190881611698565b9050919050565b60006020820190508181036000830152611928816116bb565b9050919050565b6000602082019050818103600083015261194881611701565b9050919050565b60006020820190506119646000830184611724565b92915050565b600060808201905061197f6000830187611724565b61198c6020830186611504565b6119996040830185611724565b6119a66060830184611724565b95945050505050565b60006040820190506119c46000830185611724565b6119d16020830184611724565b9392505050565b600060c0820190506119ed6000830189611724565b6119fa6020830188611724565b611a076040830187611724565b611a146060830186611724565b611a216080830185611724565b611a2e60a0830184611724565b979650505050505050565b6000611a43611a54565b9050611a4f8282611c6b565b919050565b6000604051905090565b600067ffffffffffffffff821115611a7957611a78611d04565b5b611a8282611d33565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611acc82611c12565b9150611ad783611c12565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b0c57611b0b611ca6565b5b828201905092915050565b6000611b2282611c12565b9150611b2d83611c12565b925082611b3d57611b3c611cd5565b5b828204905092915050565b6000611b5382611c12565b9150611b5e83611c12565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b9757611b96611ca6565b5b828202905092915050565b6000611bad82611c12565b9150611bb883611c12565b925082821015611bcb57611bca611ca6565b5b828203905092915050565b6000611be182611bf2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611c56578082015181840152602081019050611c3b565b83811115611c65576000848401525b50505050565b611c7482611d33565b810181811067ffffffffffffffff82111715611c9357611c92611d04565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f77726f6e67207369676e65720000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f7061796c6f616420776173206d6f646966696564000000000000000000000000600082015250565b7f4e6f7420656e6f75676820737465707320617661696c61626c6520746f206d6f60008201527f7665207468657265000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f756768742f746f6f206d7563682065746865722073656e7400600082015250565b7f796f7520616c7265616479207369676e65642075700000000000000000000000600082015250565b7f6c617374207175657269656420646f6573206e6f74206d617463680000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f796f75206e65656420746f206265207265676973746572656400000000000000600082015250565b50565b7f4661696c656420746f20776974686472617720746f6b656e0000000000000000600082015250565b611f3681611bd6565b8114611f4157600080fd5b50565b611f4d81611be8565b8114611f5857600080fd5b50565b611f6481611c12565b8114611f6f57600080fd5b50565b611f7b81611c1c565b8114611f8657600080fd5b5056fea26469706673582212204d857734f4f190805565be359ed63d0464e4ce1a3ad41afff15244f5d079c8d964736f6c63430008040033";

type PlayersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlayersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Players__factory extends ContractFactory {
  constructor(...args: PlayersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Players> {
    return super.deploy(overrides || {}) as Promise<Players>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Players {
    return super.attach(address) as Players;
  }
  override connect(signer: Signer): Players__factory {
    return super.connect(signer) as Players__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlayersInterface {
    return new utils.Interface(_abi) as PlayersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Players {
    return new Contract(address, _abi, signerOrProvider) as Players;
  }
}
